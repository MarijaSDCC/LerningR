---
title: "Reproducible document"
author: "MarijaP"
format: html
---

## Basics of R

```{r}
1 + 1
```

## Setup code chunk


## About me

-Marija Petkovic
-Steno Diabetes Center Copenhagen
-Translational Research

DDEA postdoc working on a **diabetic** *foot complications*

## Simple code
```{r}
3 * 3
```

## Setup code chunk
```{r setup code}
#| message: false
#| warning: false

# the two options of what to show in the output file (elated to chapter 8 of the course)
# press ctrl-shift-render after you give e.g.commands bellow
# this has to be right after r setup code chunk with no space

library(tidyverse)
post_meal_data <- read_csv2(
  here::here("data/post-meal-insulin.csv")
)

small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)
tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)
tidied_post_meal_data <- tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR", "Control", "First-degree relative")
  )
```
## Showing the data
```{r}
post_meal_data
```

```{r}
glimpse(post_meal_data)

ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r make_fig_caption}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histo
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r make_graph}
post_meal_data |>
  ggplot(aes(x = Group, fill = glykemi)) +
  geom_bar()
```

```{r improve_fog_caption}
#| fig-cap: ""
#| label: fig-istribution_BMI
ggplot(post_meal_data, aes(x = ))
```

See @fig-___ above for a cool plot!

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = glykemi)) +
  geom_bar()
```

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```

## Putting two plots side by side
```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

# the next chunk combines the two graphs
```{r side-by-side-figs}
#| label: fig-bmi-glycemia
#| fig-cap: "BMI and glycemia, side by side"
#| fig-subcap:
#| - "Distribution of BMI"
#| - "Number of those with glycemia"
#| layout-ncol: 2
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

## Plotting two continuous variables
```{r 2 cont_variables}
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point()
```

```{r}
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() +
  geom_smooth()
```

```{r}
#| fig-cap: "scatterplot showing BMI agains AUC of blood glucose"
#| label: fig-bmi-auc-pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() +
  geom_smooth()
```

## Selecting data
```{r}
select(post_meal_data, Age, BMI, Weight)
```

```{r}
select(post_meal_data, -Group)
```

```{r}
select(post_meal_data, starts_with("PG"))
```

```{r}
select(post_meal_data, ends_with("DXA"))
```

```{r}
select(post_meal_data, contains("0"))
```

## Renaming specific columns
```{r}
small_post_meal_data |>
  rename(aug_glucose = auc_pg)

small_post_meal_data |>
  rename(
    aug_glucose = auc_pg,
    auc_insulin = auc_ins
  )
```

## Select and rename tasks
# Task 1.
```{r}
post_meal_data |>
  select(contains("OGTT"))
```
# Task 2.
```{r}
post_meal_data |>
  select(contains(".."), -contains("...")) |>
  rename(
    P.Glucose.minus5.OGTT = P.Glucose..5.OGTT,
    Insulin.minus5.OGTT.X = Insulin..5.OGTT.X
  )
```
# Task 3.
```{r}
post_meal_data |>
  select(id, BMI, Length, Weight, Age) |>
  rename(Height = Length)
```
## filtering
```{r}
small_post_meal_data |>
  filter(glykemi == 1)

small_post_meal_data |>
  filter(BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR")
```

```{r}
small_post_meal_data |>
  filter(Group == "CTR", BMI >= 25)
```
## Modify the columnn
```{r}
tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio =
      auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR",
      "Control", "First-degree relative"
    )
  )
```
# Task 1.
```{r random}
post_meal_data |>
  filter(BMI >= 25 & BMI <= 40 & Group == "FDR")
```
# Task 2.
```{r}
post_meal_data |>
  mutate(percent_body_fat = (Fat.mass.DXA / Weight) * 100) |>
  filter(percent_body_fat > 30)
```

##Visualising with jitter plot
```{r data visualisation}
tidied_post_meal_data |>
  mutate(overweight = if_else(BMI >= 25, "Overweight", "Not overweight")) |>
  ggplot(aes(x = overweight, y = insulin_glucose_ratio)) +
  geom_jitter()
```
## plotting 3 or more variables
```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  ggplot(aes(x = Age, y = auc_insulin, colour = Group)) +
  geom_point()
```
## Make subgroups within the same group
## Separate by colour
```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(x = BMI, y = insulin_glucose_ratio, colour = Group)) +
  geom_point() +
  facet_grid(rows = vars(young))
```
## How to modify x and y axes (lab function)
```{r modify x or y}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(x = BMI, y = insulin_glucose_ratio, colour = Group)) +
  geom_point() +
  facet_grid(rows = vars(young)) +
  labs(
    x = "Body mass index (BMI)",
    y = "Insulin to glucose ratio"
  )
```
# Task 1.
```{r}
post_meal_data |>
  mutate(
    percent_body_fat = (Fat.mass.DXA / Weight) * 100,
    young = if_else(Age < 40, "Young", "Old")
  ) |>
  ggplot(aes(x = Group, y = percent_body_fat, colour = young)) +
  geom_jitter(width = 0.2)
```
# Task 2.
```{r}
post_meal_data |>
  mutate(
    insulin_glucose_ratio = (auc_ins / auc_pg),
    insulin_insensitive = if_else(insulin_glucose_ratio > mean(insulin_glucose_ratio), "Insensitive", "Sensitive")
  ) |>
  ggplot(aes(x = BMI, y = Bone.mineral.DXA)) +
  geom_point() +
  geom_smooth() +
  facet_grid(cols = vars(insulin_insensitive))
```
## Changing the colour schemes
# Tasks 1, 2, 3, 4
```{r color change_task 1 and 2}
post_meal_data |>
  mutate(hyperglycemia = if_else(glykemi == 1, "Yes", "No")) |>
  ggplot(aes(x = Group, fill = hyperglycemia)) +
  geom_bar(position = position_dodge()) +
  scale_fill_viridis_d()
# scale_fill_viridis_d(option = "magma")
```
```{r color change task 3 and 4}
post_meal_data |>
  ggplot(aes(x = auc_pg, y = auc_ins, colour = BMI)) +
  geom_point() +
  scale_colour_viridis_c()
# scale_colour_viridis_c(option = "inferno")
```
## Calculating summary statistics

```{r}
tidied_post_meal_data |>
  summarise(
    max_bmi = max(BMI),
    min_bmi = min(BMI)
  )
```
## Summarise with splitting
```{r}
tidied_post_meal_data |>
  group_by(Group) |>
  summarise(
    mean_age = mean(Age),
    mean_bmi = mean(BMI)
  )
```
## ungroup data just in case
## there is so called hidden grouping
```{r}
#| label: tbl-mean-age-bmi
#| tbl-cap: "Mean values of Age and BMI for eaach group"
tidied_post_meal_data |>
  group_by(Group) |>
  summarise(
    "Mean Age(yrs)" = round(mean(Age), 1),
    "Mean BMI(kg/m^2)" = round(mean(BMI), 1)
  ) |>
  ungroup() |>
  knitr::kable()
```
# to edit column/ raw names with spaces: use ""
